// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/python
{
    "name": "Python 3",
    // Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
    "build": {
        // Path is relative to the devcontainer.json file.
        "dockerfile": "Dockerfile"
    },
    "runArgs": [
        "--gpus",
        "all"
    ],
    // Features to add to the dev container. More info: https://containers.dev/features.
    "features": {
        "ghcr.io/devcontainers-contrib/features/fzf:1": {},
        "ghcr.io/devcontainers-contrib/features/zsh-plugins:0": {},
        "ghcr.io/devcontainers/features/docker-in-docker": {},
        "ghcr.io/devcontainers/features/kubectl-helm-minikube:1": {
            // current version of kubectl on cluster
            "version": "1.27",
            // latest version at time of writing
            "helm": "3.12.3",
            "minikube": "none"
        },
        "ghcr.io/devcontainers-contrib/features/poetry:2": {
            "version": "1.5.1"
        }
    },
    "hostRequirements": {
        "gpu": "optional"
    },
    // Use 'forwardPorts' to make a list of ports inside the container available locally.
    // "forwardPorts": [],
    // Use 'postCreateCommand' to run commands after the container is created.
    "postStartCommand": "sudo chown vscode:vscode -R /home/vscode/.cache && sudo chown vscode:vscode -R /workspaces/text-to-image-server/api/.venv && poetry config virtualenvs.in-project true && cd /workspaces/text-to-image-server/api && poetry install; bash -i -c 'cd /workspaces/text-to-image-server/bot && nvm install && nvm use && npm install'",
    // Configure tool-specific properties.
    "customizations": {
        "vscode": {
            "extensions": [
                "codezombiech.gitignore",
                "dbaeumer.vscode-eslint",
                "eamodio.gitlens",
                "ms-azuretools.vscode-docker",
                "ms-kubernetes-tools.vscode-kubernetes-tools",
                "ms-vsliveshare.vsliveshare",
                "ms-python.black-formatter",
                "ms-python.flake8",
                "ms-python.isort",
                "ms-python.python",
                "ms-python.vscode-pylance",
                "njpwerner.autodocstring",
                "Orta.vscode-jest",
                "tamasfe.even-better-toml",
            ]
        }
    },
    "mounts": [
        // poetry cache for dependencies
        "source=text-to-image-server-poetry-cache,target=/home/vscode/.cache/pypoetry,type=volume,consistency=cached",
        // python virtual environment
        "source=text-to-image-server-venv-cache,target=/workspaces/text-to-image-server/api/.venv,type=volume,consistency=cached",
        // models cache
        // see https://huggingface.co/docs/diffusers/v0.19.3/en/api/models/overview#diffusers.ModelMixin.from_pretrained
        "source=${localEnv:HOME}${localEnv:USERPROFILE}/.cache/huggingface,target=/home/vscode/.cache/huggingface,type=bind,consistency=cached",
        // api inputs
        "source=${localWorkspaceFolder}/api/inputs,target=/workspaces/text-to-image-server/api/inputs,type=bind,consistency=cached",
        // api outputs
        "source=${localWorkspaceFolder}/api/outputs,target=/workspaces/text-to-image-server/api/outputs,type=bind,consistency=cached",
        // node modules
        "source=${localWorkspaceFolder}/bot/node_modules,target=/workspaces/text-to-image-server/bot/node_modules,type=bind,consistency=cached",
        // bot outputs
        "source=${localWorkspaceFolder}/bot/outputs,target=/workspaces/text-to-image-server/bot/outputs,type=bind,consistency=cached"
    ]
    // Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
    // "remoteUser": "root"
}